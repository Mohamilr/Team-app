{"version":3,"sources":["components/UserNav/UserNav.js","shared/WysiwygEditor.js","Containers/CreateArticle/CreateArticle.js","actions/PostArticleAction.js"],"names":["UserNav","useState","isNavVisible","setIsNavVisible","className","onClick","to","activeClassName","localStorage","removeItem","WysiwygEditor","editorState","setEditorState","setArticle","convertContentToHTML","currentContentAsHTML","draftToHtml","convertToRaw","getCurrentContent","console","log","wrapperClassName","editorClassName","toolbarClassName","onEditorStateChange","createMarkup","html","__html","DOMPurify","sanitize","ArticlePage","title","setTitle","article","EditorState","createEmpty","dispatch","useDispatch","handlePostArticle","authorId","parseInt","getItem","body","a","ApiCall","post","response","error","postArticle","onSubmit","e","preventDefault","type","placeholder","name","onChange","target","value","handleTitle"],"mappings":"wJAiCeA,IA5BC,WAAO,IAAD,EACwBC,oBAAS,GADjC,mBACVC,EADU,KACIC,EADJ,KAOd,OACI,6BACI,gCACA,uBAAGC,UAAU,cAAcC,QANrB,WACdF,GAAiBD,MAMJA,GACG,yBAAKE,UAAU,YACX,kBAAC,IAAD,CAAME,GAAG,SAASF,UAAU,gBAA5B,YACA,4BACI,4BAAI,kBAAC,IAAD,CAASG,gBAAgB,SAASD,GAAG,UAArC,aACJ,4BAAI,kBAAC,IAAD,CAASC,gBAAgB,SAASD,GAAG,mBAArC,iBACJ,4BAAI,kBAAC,IAAD,CAASC,gBAAgB,SAASD,GAAG,QAArC,aACJ,4BAAI,kBAAC,IAAD,CAASC,gBAAgB,SAASD,GAAG,aAArC,aACJ,wBAAID,QAAS,WAAQG,aAAaC,WAAW,SAAUD,aAAaC,WAAW,QAAS,kBAAC,IAAD,CAAMH,GAAG,KAAT,kB,uDCxBxH,0FAQaI,GARb,cAQ6B,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,WASrDC,EAAuB,WAC3B,IAAIC,EAAuBC,IAAYC,uBAAaN,EAAYO,sBAChEL,EAAWE,GACXI,QAAQC,IAAIL,IAGd,OACE,kBAAC,SAAD,CACEM,iBAAiB,gBACjBC,gBAAgB,eAChBC,iBAAiB,gBACjBZ,YAAaA,EACba,oBAjBuB,SAACb,GAC1BC,EAAeD,GACfG,U,4PCDSW,G,OAAe,SAACC,GAC3B,MAAQ,CACNC,OAAQC,IAAUC,SAASH,MA+DhBI,UA3DK,WAAO,IAAD,EACE7B,mBAAS,IADX,mBACjB8B,EADiB,KACVC,EADU,OAEM/B,mBAAS,IAFf,mBAEjBgC,EAFiB,KAERpB,EAFQ,OAMcZ,oBACpC,kBAAMiC,cAAYC,iBAPI,mBAMjBxB,EANiB,KAMJC,EANI,KAelBwB,EAAWC,cAIXC,EAAoB,WACxB,IAAMC,EAAWC,SAAShC,aAAaiC,QAAQ,OAM/CL,EC3CuB,SAACM,GAC1B,8CAAO,WAAON,GAAP,eAAAO,EAAA,+EAEoBC,IAAQC,KAAK,WAAYH,GAF7C,OAEGI,EAFH,OAGH3B,QAAQC,IAAI0B,GAHT,gDAKH3B,QAAQ4B,MAAR,MALG,yDAAP,sDD0CWC,CALI,CACXjB,QACAE,UACAM,eASJ,OACE,yBAAKnC,UAAU,aACb,kBAACJ,EAAA,EAAD,MACA,yBAAKI,UAAU,iBACb,wBAAIA,UAAU,UAAd,sBACA,0BAAM6C,SAAU,SAACC,GACfA,EAAEC,iBACFb,MAEA,2BACEc,KAAK,OACLC,YAAY,gBACZC,KAAK,QACLlD,UAAU,QACVmD,SAAU,SAACL,GAAD,OAlBA,SAACA,GACjBlB,EAASkB,EAAEM,OAAOC,OAiBKC,CAAYR,MAE/B,yBAAK9C,UAAU,YACb,kBAACM,EAAA,EAAD,CAAeC,YAAaA,EAAaC,eAAgBA,EAAgBC,WAAYA,KAEvF,4BAAQT,UAAU,cAAlB","file":"static/js/11.92a53233.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport './Usernav.css';\r\n\r\n// class UserNav extends Component {\r\nconst UserNav = () => {   \r\n    const [ isNavVisible, setIsNavVisible ] = useState(true);\r\n    \r\n    \r\n    const toggleNav = () => {\r\n        setIsNavVisible(!isNavVisible);\r\n    }\r\n        return (\r\n            <div>\r\n                <header>\r\n                <i className=\"fas fa-bars\" onClick={toggleNav}></i>\r\n                    {isNavVisible && (\r\n                        <nav className='user-nav'>\r\n                            <Link to='/feeds' className='app-name app'>Team App</Link>\r\n                            <ul>\r\n                                <li><NavLink activeClassName='active' to='/feeds'>Timeline</NavLink></li>\r\n                                <li><NavLink activeClassName='active' to='/create-article'>Post Article</NavLink></li>\r\n                                <li><NavLink activeClassName='active' to='/gif'>Post Gif</NavLink></li>\r\n                                <li><NavLink activeClassName='active' to='/my-posts'>My Posts</NavLink></li>\r\n                                <li onClick={() => { localStorage.removeItem('token'); localStorage.removeItem('id') }}><Link to='/'>Log Out</Link></li>\r\n                            </ul>\r\n                        </nav>\r\n                    )}\r\n                </header>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default UserNav;","import React, { useState } from \"react\";\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport './wysiwyg.css';\r\n// Require Editor CSS files.\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\nexport const WysiwygEditor = ({ editorState, setEditorState, setArticle }) => {\r\n\r\n    //\r\n\r\n  const handleEditorChange = (editorState) => {\r\n    setEditorState(editorState);\r\n    convertContentToHTML();\r\n  }\r\n\r\n  const convertContentToHTML = () => {\r\n    let currentContentAsHTML = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n    setArticle(currentContentAsHTML);\r\n    console.log(currentContentAsHTML)\r\n  }\r\n\r\n  return (\r\n    <Editor\r\n      wrapperClassName=\"wrapper-class\"\r\n      editorClassName=\"editor-class\"\r\n      toolbarClassName=\"toolbar-class\"\r\n      editorState={editorState}\r\n      onEditorStateChange={handleEditorChange}\r\n    />\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport DOMPurify from 'dompurify';\r\nimport { WysiwygEditor } from '../../shared/WysiwygEditor';\r\nimport { postArticle } from '../../actions/PostArticleAction';\r\nimport UserNav from \"../../components/UserNav/UserNav\";\r\nimport \"./CreateArticle.css\";\r\n\r\n\r\n// new stuff here\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\n\r\nexport const createMarkup = (html) => {\r\n  return  {\r\n    __html: DOMPurify.sanitize(html)\r\n  }\r\n}\r\n\r\nconst ArticlePage = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [article, setArticle] = useState(\"\");\r\n\r\n\r\n  // new changes here\r\n  const [editorState, setEditorState] = useState(\r\n    () => EditorState.createEmpty(),\r\n  );\r\n\r\n\r\n\r\n\r\n\r\n  //\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n\r\n  const handlePostArticle = () => {\r\n    const authorId = parseInt(localStorage.getItem(\"id\"));\r\n    const body = {\r\n      title,\r\n      article,\r\n      authorId\r\n    }\r\n    dispatch(postArticle(body));\r\n  }\r\n\r\n  const handleTitle = (e) => {\r\n      setTitle(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <UserNav />\r\n      <div className=\"write-article\">\r\n        <h1 className=\"header\">Write Your Article</h1>\r\n        <form onSubmit={(e) => {\r\n          e.preventDefault();\r\n          handlePostArticle()\r\n        }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Article Title\"\r\n            name=\"title\"\r\n            className=\"title\"\r\n            onChange={(e) => handleTitle(e)}\r\n          />\r\n          <div className=\"textarea\">\r\n            <WysiwygEditor editorState={editorState} setEditorState={setEditorState} setArticle={setArticle} />\r\n          </div>\r\n          <button className=\"btn-upload\">Publish</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticlePage;\r\n","import ApiCall from \"../ApiCalls/ApiCall\";\r\n\r\nexport const postArticle = (body) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await ApiCall.post(\"articles\", body);\r\n      console.log(response);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n};\r\n"],"sourceRoot":""}