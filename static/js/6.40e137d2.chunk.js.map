{"version":3,"sources":["components/UserNav/UserNav.js","assets/images/loader.gif","components/Loader.js","shared/WysiwygEditor.js","Containers/CreateArticle/CreateArticle.js","actions/PostArticleAction.js","actions/FeedsAction.js","Utils/SortData.js","Containers/Timeline/Timeline.js","actions/ActionTypes.js"],"names":["UserNav","useState","isNavVisible","setIsNavVisible","className","onClick","to","activeClassName","localStorage","removeItem","Loader","src","spinner","style","margin","display","width","alt","WysiwygEditor","editorState","setEditorState","setArticle","convertContentToHTML","currentContentAsHTML","draftToHtml","convertToRaw","getCurrentContent","console","log","wrapperClassName","editorClassName","toolbarClassName","onEditorStateChange","createMarkup","html","__html","DOMPurify","sanitize","ArticlePage","title","setTitle","article","EditorState","createEmpty","dispatch","useDispatch","handlePostArticle","authorId","parseInt","getItem","body","a","ApiCall","post","response","error","postArticle","onSubmit","e","preventDefault","type","placeholder","name","onChange","target","value","handleTitle","AllFeeds","get","data","FEEDS","FEEDS_LOADING","MYFeeds","id","articles","gifs","map","authorid","push","gif","gifauthorid","MY_ARTICLES","MY_GIFS","REFRESH","descendingOrder","sort","b","Date","createdon","Timeline","useSelector","state","feeds","loading","FeedsLoading","useEffect","i","key","articleid","dangerouslySetInnerHTML","image","giftitle","gifcreatedon","LOGIN","SIGNUP","GIF_UPLOADING","VIEW_ARTICLE","VIEW_ARTICLE_LOADING","POST_COMMENT_LOADING","VIEW_GIF","VIEW_GIF_LOADING"],"mappings":"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","file":"static/js/6.40e137d2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport './Usernav.css';\r\n\r\n// class UserNav extends Component {\r\nconst UserNav = () => {   \r\n    const [ isNavVisible, setIsNavVisible ] = useState(true);\r\n    \r\n    \r\n    const toggleNav = () => {\r\n        setIsNavVisible(!isNavVisible);\r\n    }\r\n        return (\r\n            <div>\r\n                <header>\r\n                <i className=\"fas fa-bars\" onClick={toggleNav}></i>\r\n                    {isNavVisible && (\r\n                        <nav className='user-nav'>\r\n                            <Link to='/feeds' className='app-name app'>Team App</Link>\r\n                            <ul>\r\n                                <li><NavLink activeClassName='active' to='/feeds'>Timeline</NavLink></li>\r\n                                <li><NavLink activeClassName='active' to='/create-article'>Post Article</NavLink></li>\r\n                                <li><NavLink activeClassName='active' to='/gif'>Post Gif</NavLink></li>\r\n                                <li><NavLink activeClassName='active' to='/my-posts'>My Posts</NavLink></li>\r\n                                <li onClick={() => { localStorage.removeItem('token'); localStorage.removeItem('id') }}><Link to='/'>Log Out</Link></li>\r\n                            </ul>\r\n                        </nav>\r\n                    )}\r\n                </header>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default UserNav;","export default __webpack_public_path__ + \"static/media/loader.bbecf458.gif\";","import React from 'react';\r\nimport spinner from '../assets/images/loader.gif';\r\n\r\n\r\nconst Loader = () => {\r\n      return (\r\n      <div>\r\n          <img src={spinner} style={{margin: '10em auto', display: 'block', width: '15em'}} alt='Loading' />\r\n      </div>\r\n      )\r\n}\r\n\r\nexport default Loader;","import React, { useState } from \"react\";\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport './wysiwyg.css';\r\n// Require Editor CSS files.\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\nexport const WysiwygEditor = ({ editorState, setEditorState, setArticle }) => {\r\n\r\n    //\r\n\r\n  const handleEditorChange = (editorState) => {\r\n    setEditorState(editorState);\r\n    convertContentToHTML();\r\n  }\r\n\r\n  const convertContentToHTML = () => {\r\n    let currentContentAsHTML = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n    setArticle(currentContentAsHTML);\r\n    console.log(currentContentAsHTML)\r\n  }\r\n\r\n  return (\r\n    <Editor\r\n      wrapperClassName=\"wrapper-class\"\r\n      editorClassName=\"editor-class\"\r\n      toolbarClassName=\"toolbar-class\"\r\n      editorState={editorState}\r\n      onEditorStateChange={handleEditorChange}\r\n    />\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport DOMPurify from 'dompurify';\r\nimport { WysiwygEditor } from '../../shared/WysiwygEditor';\r\nimport { postArticle } from '../../actions/PostArticleAction';\r\nimport UserNav from \"../../components/UserNav/UserNav\";\r\nimport \"./CreateArticle.css\";\r\n\r\n\r\n// new stuff here\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\n\r\nexport const createMarkup = (html) => {\r\n  return  {\r\n    __html: DOMPurify.sanitize(html)\r\n  }\r\n}\r\n\r\nconst ArticlePage = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [article, setArticle] = useState(\"\");\r\n\r\n\r\n  // new changes here\r\n  const [editorState, setEditorState] = useState(\r\n    () => EditorState.createEmpty(),\r\n  );\r\n\r\n\r\n\r\n\r\n\r\n  //\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n\r\n  const handlePostArticle = () => {\r\n    const authorId = parseInt(localStorage.getItem(\"id\"));\r\n    const body = {\r\n      title,\r\n      article,\r\n      authorId\r\n    }\r\n    dispatch(postArticle(body));\r\n  }\r\n\r\n  const handleTitle = (e) => {\r\n      setTitle(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <UserNav />\r\n      <div className=\"write-article\">\r\n        <h1 className=\"header\">Write Your Article</h1>\r\n        <form onSubmit={(e) => {\r\n          e.preventDefault();\r\n          handlePostArticle()\r\n        }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Article Title\"\r\n            name=\"title\"\r\n            className=\"title\"\r\n            onChange={(e) => handleTitle(e)}\r\n          />\r\n          <div className=\"textarea\">\r\n            <WysiwygEditor editorState={editorState} setEditorState={setEditorState} setArticle={setArticle} />\r\n          </div>\r\n          <button className=\"btn-upload\">Publish</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticlePage;\r\n","import ApiCall from \"../ApiCalls/ApiCall\";\r\n\r\nexport const postArticle = (body) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await ApiCall.post(\"articles\", body);\r\n      console.log(response);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n};\r\n","import { FEEDS, FEEDS_LOADING, MY_ARTICLES, MY_GIFS, REFRESH } from './ActionTypes';\r\nimport ApiCall from '../ApiCalls/ApiCall';\r\n\r\nexport const AllFeeds = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await ApiCall.get(\"/feed\");\r\n            const { data: { data } } = response;\r\n              dispatch({ type: FEEDS, data: data });\r\n              dispatch({ type: FEEDS_LOADING });\r\n            console.log(data);\r\n          } catch (e) {\r\n            console.error(e);\r\n          }\r\n\r\n    }\r\n}\r\n\r\nexport const MYFeeds = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const id = parseInt(localStorage.getItem(\"id\"));\r\n            const response = await ApiCall.get(\"/feed\");\r\n            const {\r\n              data: { data },\r\n            } = response;\r\n\r\n            const articles = [];\r\n            const gifs = [];\r\n\r\n            data.articles.map((article) => {\r\n              if (article.authorid === id) {\r\n                articles.push(article);\r\n              }\r\n            });\r\n\r\n            data.gifs.map((gif) => {\r\n              if (gif.gifauthorid === id) {\r\n                gifs.push(gif);\r\n              }\r\n            });\r\n\r\n            dispatch({ type: MY_ARTICLES, data: articles });\r\n            dispatch({ type: MY_GIFS, data: gifs });\r\n            dispatch({ type: FEEDS_LOADING });\r\n            dispatch({ type: REFRESH, data: false});\r\n            console.log(data);\r\n          } catch (e) {\r\n            console.error(e);\r\n          }\r\n    }\r\n}\r\n","export const descendingOrder = (data) => {\r\n    data.sort((a, b) => {\r\n        return new Date(b.createdon) - new Date(a.createdon);\r\n      })\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { AllFeeds } from \"../../actions/FeedsAction\";\r\n//\r\nimport { descendingOrder } from \"../../Utils/SortData\";\r\nimport { createMarkup } from \"../CreateArticle/CreateArticle\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserNav from \"../../components/UserNav/UserNav\";\r\nimport \"./Timeline.css\";\r\n\r\n// loader\r\nimport Loader from \"../../components/Loader\";\r\n\r\nconst Timeline = () => {\r\n  const { articles } = useSelector((state) => state.feeds);\r\n  const { gifs } = useSelector((state) => state.feeds);\r\n  const loading = useSelector((state) => state.FeedsLoading);\r\n\r\n  //\r\n  if (articles) {\r\n    descendingOrder(articles);\r\n  }\r\n\r\n  if (gifs) {\r\n    descendingOrder(gifs);\r\n  }\r\n\r\n  //\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(AllFeeds());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <UserNav />\r\n      <div className=\"right\">\r\n        <div className=\"headers\">\r\n          <h4>Articles</h4> | <h4>Gifs</h4>\r\n        </div>\r\n        <div className=\"article-container\">\r\n          {loading ? (\r\n            <Loader />\r\n          ) : articles ? (\r\n            articles.map((article, i) => (\r\n              <div className=\"articles\" key={i}>\r\n                <div className=\"article-properties\">\r\n                  <Link to={`/article/${article.articleid}`}>\r\n                    <h3 className=\"article-title\">{article.title}</h3>\r\n                  </Link>\r\n                  <p>{article.createdon}</p>\r\n                </div>\r\n                <article>{article.article}</article>\r\n                <article style={{display: 'inline-block'}}\r\n                  dangerouslySetInnerHTML={createMarkup(article.article)}\r\n                ></article>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            \"no articles\"\r\n          )}\r\n        </div>\r\n        {/* gif area */}\r\n        <div className=\"gif-container\">\r\n          {gifs\r\n            ? gifs.map((gif, i) => (\r\n                <div className=\"gif\" key={i}>\r\n                  <img src={gif.image} alt=\"gif\" className=\"gif-image\" />\r\n                  <div className=\"gif-properties\">\r\n                    <Link to={`/gif/${gif.giftitle}`}>\r\n                      <h3>{gif.giftitle}</h3>\r\n                    </Link>\r\n                    <div>{gif.gifcreatedon}</div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : \"no gifs\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n","// Register\r\nexport const LOGIN = 'LOGIN';\r\nexport const SIGNUP = 'SIGNUP';\r\n//\r\nexport const FEEDS = 'FEEDS';\r\nexport const FEEDS_LOADING = 'FEEDS_LOADING';\r\n//\r\nexport const MY_ARTICLES = 'MY_ARTICLES';\r\nexport const MY_GIFS = 'MY_GIFS';\r\n//\r\nexport const GIF_UPLOADING = 'GIF_UPLOADING';\r\n//\r\nexport const VIEW_ARTICLE = 'VIEW_ARTICLE';\r\nexport const VIEW_ARTICLE_LOADING = 'VIEW_ARTICLE_LOADING';\r\n//\r\nexport const POST_COMMENT_LOADING = 'POST_COMMENT_LOADING';\r\n//\r\nexport const VIEW_GIF = 'VIEW_GIF';\r\nexport const VIEW_GIF_LOADING = 'VIEW_GIF_LOADING';\r\n// global reload\r\nexport const REFRESH = 'REFRESH';\r\n"],"sourceRoot":""}